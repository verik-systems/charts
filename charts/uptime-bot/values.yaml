
## @section Global Parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param commonLabels.app.kubernetes.io/name common Kubernetes app label
## @param commonLabels.app.kubernetes.io/component common Kubernetes app component
commonLabels:
  app.kubernetes.io/name: uptime-bot
  app.kubernetes.io/component: uptime

## @param labels.app common app label
## @param labels.role common role label
## @param labels.release allow prometheus scrape metrics
labels: 
  app: uptime-bot
  role: agent
  release: prometheus

## @param nameOverride String to partially override common.names.fullname
nameOverride: "" # <please update>
##
## @section Common Parameters
##

## @param image.pullPolicy pull image policy
## @param image.registry image registry
## @param image.repository image repository
## @param image.tag image tag
image:
  pullPolicy: IfNotPresent
  registry: "registry.hub.docker.com" 
  repository: "verik01/uptime-bot" 
  tag: "v1.11.1"
  # repository: "" # <please update>
  # tag: "" # <please update>
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/

  # secretName: 
  # credentials: 
  #   # image.registry is the Docker registry
  #   - registry: 
  #     # image.username is the Docker user's username
  #     username: 
  #     # image.accessToken is the Docker user's access token (recommened) or password
  #     accessToken: 

## @param replicas Number of Metrics Server replicas to deploy
replicas: 1

## @param extraEnvVars[0].name Extra environments name
## @param extraEnvVars[0].value Extra environments value
extraEnvVars: 
  - name: GET_HOSTS_FROM
    value: dns

## @param configurations configmap configuration data
configurations: []

##
## @section Pod configuration Parameters
##

## @param podAnnotations Additional pod annotations for MariaDB Galera pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

## @param priorityClassName Priority class for pod scheduling
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
priorityClassName: system-cluster-critical

## @param podAffinityPreset Pod affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
## Allowed values: soft, hard
##
podAffinityPreset: ""

## @param podAntiAffinityPreset Pod anti-affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
## Allowed values: soft, hard
##
podAntiAffinityPreset: soft

## @param podDisruptionBudget.enabled Pod disruption budget enabled
## @param podDisruptionBudget.minAvailable Pod disruption budget min available pod
## @param podDisruptionBudget.maxUnavailable Pod disruption budget max unavailable pod
# https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#pod-disruption-budgets
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  maxUnavailable: 3


##
## @section Node configuration Parameters
##

## @param nodeAffinityPreset.type Node affinity preset type
## @param nodeAffinityPreset.key Node affinity preset key
## @param nodeAffinityPreset.values Node affinity preset values
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
## Allowed values: soft, hard
##
nodeAffinityPreset:
  ## Node affinity type
  ## Allowed values: soft, hard
  type: ""
  ## Node label key to match
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## Node label values to match
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []

## @param affinity Affinity for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}

## @param nodeSelector.alpha.eksctl.io/nodegroup-name node group name for node selector
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: 
  alpha.eksctl.io/nodegroup-name: "please_update"

## @param tolerations Tolerations for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

##
## @section Storage configuration Parameters
##

## @param extraVolumeMounts[0].name extra volume mounts name
## @param extraVolumeMounts[0].mountPath extra volume mounts path
extraVolumeMounts:
  - name: uptime-bot
    mountPath: /app/data
## @param extraVolumes[0].name extra volume name
## @param extraVolumes[0].emptyDir extra volume emptyDir definition
extraVolumes:
  - name: extra-data
    emptyDir: {}

## @param extraArgs extra arguments pass to service container
extraArgs: []

##
## @section Service configuration Parameters
##

## @param containerPort Container port
containerPort: 3001

## @param service.type Kubernetes service type
## @param service.labels Kubernetes service labels
## @param service.ports[0].name Kubernetes service for http port
## @param service.ports[0].port Kubernetes service port
## @param service.ports[0].targetPort Kubernetes service target container port
## @param service.ports[1].name Kubernetes service for metric port
## @param service.ports[1].port Kubernetes service port
## @param service.ports[1].targetPort Kubernetes service target container port
## @param service.ports[1].protocol Kubernetes service protocol is TCP
## @param service.ports[2].name Kubernetes service for https port
## @param service.ports[2].port Kubernetes service port
## @param service.ports[2].targetPort Kubernetes service target container port
##
service:
  ## Kubernetes service type and port number
  ##
  type: ClusterIP
  ports: 
    - name: http
      port: 80
      targetPort: 3001
    - name: metrics
      protocol: TCP
      port: 9913
      targetPort: 3001
    - name: https
      port: 443
      targetPort: 3001
  # annotations:
  #   service.beta.kubernetes.io/aws-load-balancer-type: nlb
  #   # Note that the backend talks over HTTP.
  #   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  #   # TODO: Fill in with the ARN of your certificate.
  #   # veriksystems.com, *.veriksystems.com
  #   service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:ap-southeast-2:383400109659:certificate/11eda06a-f23d-4465-a037-bfff5c2ff123
  #   # Only run SSL on the port named "https" below.
  #   service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"

  ## Provide any additional labels which may be required. This can be used to
  ## have metrics-server show up in `kubectl cluster-info`
  ##  kubernetes.io/cluster-service: "true"
  ##  kubernetes.io/name: "Metrics-server"
  labels: {}

##
## @section Ingress configuration Parameters
##

## @param ingress.enabled Kubernetes ingress enabled
## @param ingress.annotations.kubernetes.io/ingress.class Kubernetes ingress annotations kubernetes.io/ingress.class nginx
## @param ingress.labels Kubernetes ingress labels
## @param ingress.port Kubernetes ingress port
## @param ingress.path Kubernetes ingress path
## @param ingress.pathType Kubernetes ingress pathType
## @param ingress.tls Kubernetes ingress tls
## @param ingress.hosts hosts list
ingress:
  ## If true, VEriK Service Ingress will be created
  ##
  enabled: true

  ## Annotations for VEriK Service Ingress
  ##
  annotations: 
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  ## Labels to be added to the Ingress
  ##
  labels: {}

  port: 80

  ## Hostnames.
  ## Must be provided if Ingress is enable.
  ##
  hosts:
    - uptime.veriksystems.com

  ## Path for VEriK Service ingress
  path: /
  pathType: Prefix

  ## TLS configuration for VEriK Service Ingress
  ## Secret must be manually created in the namespace
  ##
  tls: []
  # - secretName: general-tls
  #   hosts:
  #   - app.example.com

##
## @section Resource quota configuraiton Parameters
##

## Metric Server containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
## @param resources.limits.cpu Kubernetes resources limit cpu configure
## @param resources.limits.memory Kubernetes resources limit memory configure
## @param resources.requests.cpu Kubernetes resources requests cpu configure
## @param resources.requests.memory Kubernetes resources requests memory configure
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits: 
    cpu: 200m
    memory: 256Mi
  requests: 
    cpu: 100m
    memory: 128Mi
##
## @section Metric configuraiton Parameters
##
metrics:
  ## @param metrics.enabled Enable the export of Prometheus metrics
  ##
  enabled: true

  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
    ##
    enabled: true
    ## @param metrics.serviceMonitor.basicAuth.enabled enable basic-auth for metrics endpoint
    ## @param metrics.serviceMonitor.basicAuth.username username
    ## @param metrics.serviceMonitor.basicAuth.password password
    basicAuth:
      enabled: true
      username: ""
      password: ""
    ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## interval: 10s
    ##
    interval: ""
    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## scrapeTimeout: 10s
    ##
    scrapeTimeout: ""
    ## @param metrics.serviceMonitor.selector.app Prometheus instance selector labels
    ## @param metrics.serviceMonitor.selector.role Prometheus instance selector labels
    ## @param metrics.serviceMonitor.selector.release Prometheus instance selector labels
    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
    ## e.g:
    ## selector:
    ##   prometheus: my-prometheus
    ##
    selector: 
      app: uptime-bot
      role: agent
      release: prometheus
    ## @param metrics.serviceMonitor.metricRelabelings Specify Metric Relabellings to add to the scrape endpoint
    ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#podmetricsendpoint
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.honorLabels Labels to honor to add to the scrape endpoint
    ##
    honorLabels: false
    ## @param metrics.serviceMonitor.additionalLabels Additional custom labels for the ServiceMonitor
    ##
    additionalLabels: {}
    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
    ##
    jobLabel: ""

    ## @param metrics.serviceMonitor.port service monitor port mapping with Kubernetes service endpoint port
    port: metrics

##
## @section Resource Healthz configuraiton Parameters
##
## @param healthz.startupProbe Kubernetes container startupProbe
## @param healthz.livenessProbe Kubernetes container livenessProbe
## @param healthz.readinessProbe Kubernetes container readinessProbe
healthz:
  startupProbe: /status
  livenessProbe: /status
  readinessProbe: /status

## @section Persistence Parameters

## Persistence Parameters
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: true
  ## @param persistence.storageClass Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  ##
  storageClass: ""
  ## @param persistence.accessModes [array] Persistent Volume access modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.accessMode Persistent Volume access mode (DEPRECATED: use `persistence.accessModes` instead)
  ##
  accessMode: ReadWriteOnce
  ## @param persistence.size Persistent Volume size
  ##
  size: 2Gi
  ## @param persistence.dataSource Custom PVC data source
  ##
  dataSource: {}
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:xxx`
  ##
  enabled: true
  ## Bitnami Shell image
  ## ref: https://hub.docker.com/r/bitnami/bitnami-shell/tags/
  ## @param volumePermissions.image Bitnami Shell image registry
  ## @param volumePermissions.imagePullPolicy Bitnami Shell image pull policy
  ##
  image: bitnami/bitnami-shell:10-debian-10-r299
  imagePullPolicy: IfNotPresent
   
  ## Init container's resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits.cpu The resources limits cpu for the init container
  ## @param volumePermissions.resources.limits.memory The resources limits memory for the init container
  ## @param volumePermissions.resources.requests.cpu The requested resources cpu for the init container
  ## @param volumePermissions.resources.requests.memory The requested resources memory for the init container
  ##
  resources:
    limits: 
      cpu: 200m
      memory: 256Mi
    requests: 
      cpu: 100m
      memory: 128Mi
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.securityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  securityContext:
    runAsUser: 0
  ## @param volumePermissions.servicePath Service data location, MUST eq with extraVolumeMounts mountPath
  servicePath: "/app/data"

  ## Provision config data
  ## @param provisionData.image image registry
  ## @param provisionData.imagePullPolicy image pull policy
  ## @param provisionData.extraArgs extra arguments pass to service container
  ##
provisionData:
  image: veriks/uptime-datasource:v0.1.1
  imagePullPolicy: IfNotPresent
  extraArgs: []